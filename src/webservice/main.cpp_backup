#include "sipgw.nsmap"
#include "SipgwService.h"
#include <unistd.h>

int http_get(struct soap *soap)
{
	FILE *fd;
	char *s = strchr(soap->path, '?'); // soap->path has the URL path (soap->endpoint has the full URL)
	char *respose_message = "method not supported\n if you want get wsdl file. please input:"
	"\n\"http://192.168.2.128:9800/SipGwServer?wsdl\" "
	"\nin your web browser.";
	if (!s || strcmp(s, "?wsdl"))
	{
		//return SOAP_GET_METHOD; // GET method not supported
		soap_send_raw(soap, respose_message, strlen(respose_message));
	    return SOAP_OK; 
	}

	fd = fopen("sipgw.wsdl", "rb"); // open WSDL file to copy as a response

	if (!fd)
	{
		return 404; // return HTTP 404 not found
	}

	soap->http_content = "text/xml; charset=utf-8"; // HTTP header with text/xml content 
	soap_response(soap, SOAP_FILE); 
	for (;;) 
	{
		size_t r = fread(soap->tmpbuf, 1, sizeof(soap->tmpbuf), fd); 
		if (!r || soap_send_raw(soap, soap->tmpbuf, r)) 
			break;
	} 
	fclose(fd); 
	soap_end_send(soap); 
	return SOAP_OK; 
}

int main()
{
	struct soap ServerSoap;
	ServerSoap.fget = http_get;
    CSipgwSvr sipgwsvr(&ServerSoap);
    sipgwsvr.startup();
}

